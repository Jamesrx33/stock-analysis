Sub MacroCheck()

Dim testMessage As String

testMessage = "Hello World!"

MsgBox (testMessage)

End Sub


Sub DQAnalysis()
    
    Worksheets("DQ Analysis").Activate
    
    Range("A1").Value = "DAQO (Ticker: DQ)"
    
    'Create a header row
    Cells(3, 1).Value = "Year"
    Cells(3, 2).Value = "Total Daily Volume"
    Cells(3, 3).Value = "Return"
    
    Worksheets("2018").Activate
    
    rowStart = 2
    
    'rowEnd code taken from https://stackoverflow.com/questions/18088729/row-count-where-data-exists
    rowEnd = Cells(Rows.Count, "A").End(xlUp).Row
    
    'Initialize totalVolume variable to 0
    totalVolume = 0
    Dim startingPrice As Double
    Dim endingPrice As Double
        
    
    For i = rowStart To rowEnd
        'increase totalVolume if ticker is DQ
        If Cells(i, 1).Value = "DQ" Then
            totalVolume = totalVolume + Cells(i, 8).Value
        End If

        'find starting price, assuming the data is ordered by Ticker and chronologically
        If Cells(i, 1).Value = "DQ" And Cells(i - 1, 1).Value <> "DQ" Then
            startingPrice = Cells(i, 6).Value
        End If
        
        'find ending price, assuming the data is ordered by Ticker and chronologically
        If Cells(i, 1).Value = "DQ" And Cells(i + 1, 1).Value <> "DQ" Then
            endingPrice = Cells(i, 6).Value
        End If
        
    Next i
    
    
    Worksheets("DQ Analysis").Activate
    Cells(4, 1).Value = 2018
    Cells(4, 2).Value = totalVolume
    Cells(4, 3).Value = (endingPrice / startingPrice) - 1
    
End Sub

Sub HeaderPopups()
    Worksheets("2018").Activate
    
    For i = 1 To 8
        MsgBox (Cells(1, i))
        
    Next i
    
End Sub

Sub AllStocksAnalysis()

    'Initialize and populate table headers for All Stocks Analysis Worksheet
    Worksheets("All Stocks Analysis").Activate
    
    Range("A1").Value = "All Stocks (2018)"
    
    'Create a header row
    Cells(3, 1).Value = "Ticker"
    Cells(3, 2).Value = "Total Daily Volume"
    Cells(3, 3).Value = "Return"
    
    
    'Initialize 2018 worksheet and begin computation
    Worksheets("2018").Activate
    
    'rowEnd code taken from https://stackoverflow.com/questions/18088729/row-count-where-data-exists
    rowEnd = Cells(Rows.Count, "A").End(xlUp).Row
    
    'Initialize tickerCount to 1 -- this is assuming there is at least one Ticker
    tickerCount = 1
        
    'Obtain the count of unique Tickers (Starting on "i"(row) 3 so comparisons do not include the header row)
    For i = 3 To rowEnd
    
        If Cells(i, 1).Value <> Cells(i - 1, 1).Value Then
    
            tickerCount = tickerCount + 1
            
        End If
    
    Next i
    
    'Initialize the tickers array using the tickerCount variable, set index 0 to the first Ticker in the sheet
    Dim tickers() As String
    ReDim tickers(tickerCount)
    tickers(0) = Cells(2, 1).Value
    
    'Initialize array Index value for populating the ticker() array
    tickerIndex = 0
    
    'Iterate through each row in the sheet, if the Ticker value in the current row is different than the last identified Ticker, append the ticker array with that value
    For i = 2 To rowEnd
    
        If Cells(i, 1) <> tickers(tickerIndex) Then
    
            tickerIndex = tickerIndex + 1
            tickers(tickerIndex) = Cells(i, 1)
            
        End If
    
    Next i
    
    'Initialize totalVolume, outputRow, startingPrice and endingPrice variables
    totalVolume = 0
    'outputRow starts at 4 so that our outputs will begin under our headers previously generated in "All Stocks Analysis"
    outputRow = 4
    Dim startingPrice As Double
    Dim endingPrice As Double
    
    'Iterate through the ticker() array to perform analysis
   For i = 0 To (tickerCount - 1)
   
        currentTicker = tickers(i)
       
       For j = 2 To rowEnd
            'increase totalVolume if the ticker at the current row is equal to the currentTicker in the ticker array
            If Cells(j, 1).Value = currentTicker Then
                totalVolume = totalVolume + Cells(j, 8).Value
            End If

            'find starting price of the current ticker, assuming the data is ordered by Ticker and chronologically
            If Cells(j, 1).Value = currentTicker And Cells(j - 1, 1).Value <> currentTicker Then
                startingPrice = Cells(j, 6).Value
             End If
        
            'find ending price of the current ticker, assuming the data is ordered by Ticker and chronologically
            If Cells(j, 1).Value = currentTicker And Cells(j + 1, 1).Value <> currentTicker Then
                endingPrice = Cells(j, 6).Value
            End If

       Next j
   
    'Activate All Stocks Analysis worksheet and Output results
        Worksheets("All Stocks Analysis").Activate
        Cells(outputRow, 1).Value = currentTicker
        Cells(outputRow, 2).Value = totalVolume
        Cells(outputRow, 3).Value = (endingPrice / startingPrice) - 1
        
    'Append outputRow by one to continue onto the next line in the "All Stocks Analysis" worksheet
        outputRow = outputRow + 1
    
    'Re-Activate "2018" worksheet for next iteration
        Worksheets("2018").Activate
    
   Next i
   
   
    'Formatting
    Worksheets("All Stocks Analysis").Activate
    
    Range("A3:C3").Font.Bold = True
    Range("A3:C3").Borders(xlEdgeBottom).LineStyle = xlContinuous
    Range("A3:C3").Font.FontStyle = "Aharoni"
    Range("A3:C3").Font.Size = 18
    Range("A3:C3").Font.Color = RGB(0, 255, 0)
    
    Range("B4:B15").NumberFormat = "$#,##0.00"
    
    Range("C4:C15").NumberFormat = "0.00%"
    
    Columns("A").AutoFit
    Columns("B").AutoFit
    Columns("C").AutoFit
    
    dataRowStart = 4
    dataRowEnd = 15
    For i = dataRowStart To dataRowEnd
    
        If Cells(i, 3) > 0 Then
            'Color the cell green
            Cells(i, 3).Interior.Color = vbGreen
        ElseIf Cells(i, 3) < 0 Then
            'Color the cell red
            Cells(i, 3).Interior.Color = vbRed

        Else
            'Clear the cell color
            Cells(i, 3).Interior.Color = xlNone

        End If
        
    Next i
    

End Sub

Sub formatAllStocksAnalysisTable()

    'Formatting
    Worksheets("All Stocks Analysis").Activate
    
    Range("A3:C3").Font.Bold = True
    Range("A3:C3").Borders(xlEdgeBottom).LineStyle = xlContinuous
    Range("A3:C3").Font.FontStyle = "Aharoni"
    Range("A3:C3").Font.Size = 18
    Range("A3:C3").Font.Color = RGB(0, 255, 0)
    
    Range("B4:B15").NumberFormat = "$#,##0.00"
    
    Range("C4:C15").NumberFormat = "0.00%"
    
    Columns("A").AutoFit
    Columns("B").AutoFit
    Columns("C").AutoFit
    
    dataRowStart = 4
    dataRowEnd = 15
    For i = dataRowStart To dataRowEnd
    
        If Cells(i, 3) > 0 Then
            'Color the cell green
            Cells(i, 3).Interior.Color = vbGreen
        ElseIf Cells(i, 3) < 0 Then
            'Color the cell red
            Cells(i, 3).Interior.Color = vbRed

        Else
            'Clear the cell color
            Cells(i, 3).Interior.Color = xlNone

        End If
        
    Next i
    
    
    'Skill Drill checkerboard formatting
    startDrill = 1
    stopDrill = 8
        
    For i = startDrill To stopDrill
    
        For j = startDrill To stopDrill
        
            If i Mod 2 And j Mod 2 Then
                Cells(20 + i, j).Interior.Color = RGB(10, 10, 200)
            ElseIf i Mod 2 And Not j Mod 2 Then
                Cells(20 + i, j).Interior.Color = RGB(15, 255, 0)
            ElseIf Not i Mod 2 And j Mod 2 Then
                Cells(20 + i, j).Interior.Color = RGB(15, 255, 0)
            Else
                Cells(20 + i, j).Interior.Color = RGB(10, 10, 200)
            End If
            
        
        Next j
    
    Next i
    

    
End Sub

Sub ClearWorksheet()

    Cells.Clear

End Sub

Sub yearValueAnalysis()
    yearValue = InputBox("What year would you like to run the analysis on?")
    
    
    'Initialize and populate table headers for All Stocks Analysis Worksheet
    Worksheets("All Stocks Analysis").Activate
    
    Range("A1").Value = "All Stocks (" + yearValue + ")"
    
    'Create a header row
    Cells(3, 1).Value = "Ticker"
    Cells(3, 2).Value = "Total Daily Volume"
    Cells(3, 3).Value = "Return"
    
    
    'Initialize 2018 worksheet and begin computation
    Worksheets(yearValue).Activate
    
    'rowEnd code taken from https://stackoverflow.com/questions/18088729/row-count-where-data-exists
    rowEnd = Cells(Rows.Count, "A").End(xlUp).Row
    
    'Initialize tickerCount to 1 -- this is assuming there is at least one Ticker
    tickerCount = 1
        
    'Obtain the count of unique Tickers (Starting on "i"(row) 3 so comparisons do not include the header row)
    For i = 3 To rowEnd
    
        If Cells(i, 1).Value <> Cells(i - 1, 1).Value Then
    
            tickerCount = tickerCount + 1
            
        End If
    
    Next i
    
    'Initialize the tickers array using the tickerCount variable, set index 0 to the first Ticker in the sheet
    Dim tickers() As String
    ReDim tickers(tickerCount)
    tickers(0) = Cells(2, 1).Value
    
    'Initialize array Index value for populating the ticker() array
    tickerIndex = 0
    
    'Iterate through each row in the sheet, if the Ticker value in the current row is different than the last identified Ticker, append the ticker array with that value
    For i = 2 To rowEnd
    
        If Cells(i, 1) <> tickers(tickerIndex) Then
    
            tickerIndex = tickerIndex + 1
            tickers(tickerIndex) = Cells(i, 1)
            
        End If
    
    Next i
    
    'Initialize totalVolume, outputRow, startingPrice and endingPrice variables
    totalVolume = 0
    'outputRow starts at 4 so that our outputs will begin under our headers previously generated in "All Stocks Analysis"
    outputRow = 4
    Dim startingPrice As Double
    Dim endingPrice As Double
    
    'Iterate through the ticker() array to perform analysis
   For i = 0 To (tickerCount - 1)
   
        currentTicker = tickers(i)
       
       For j = 2 To rowEnd
            'increase totalVolume if the ticker at the current row is equal to the currentTicker in the ticker array
            If Cells(j, 1).Value = currentTicker Then
                totalVolume = totalVolume + Cells(j, 8).Value
            End If

            'find starting price of the current ticker, assuming the data is ordered by Ticker and chronologically
            If Cells(j, 1).Value = currentTicker And Cells(j - 1, 1).Value <> currentTicker Then
                startingPrice = Cells(j, 6).Value
             End If
        
            'find ending price of the current ticker, assuming the data is ordered by Ticker and chronologically
            If Cells(j, 1).Value = currentTicker And Cells(j + 1, 1).Value <> currentTicker Then
                endingPrice = Cells(j, 6).Value
            End If

       Next j
   
    'Activate All Stocks Analysis worksheet and Output results
        Worksheets("All Stocks Analysis").Activate
        Cells(outputRow, 1).Value = currentTicker
        Cells(outputRow, 2).Value = totalVolume
        Cells(outputRow, 3).Value = (endingPrice / startingPrice) - 1
        
    'Append outputRow by one to continue onto the next line in the "All Stocks Analysis" worksheet
        outputRow = outputRow + 1
    
    'Re-Activate "2018" worksheet for next iteration
        Worksheets(yearValue).Activate
    
   Next i
   
   
    'Formatting
    Worksheets("All Stocks Analysis").Activate
    
    Range("A3:C3").Font.Bold = True
    Range("A3:C3").Borders(xlEdgeBottom).LineStyle = xlContinuous
    Range("A3:C3").Font.FontStyle = "Aharoni"
    Range("A3:C3").Font.Size = 18
    Range("A3:C3").Font.Color = RGB(0, 255, 0)
    
    Range("B4:B15").NumberFormat = "$#,##0.00"
    
    Range("C4:C15").NumberFormat = "0.00%"
    
    Columns("A").AutoFit
    Columns("B").AutoFit
    Columns("C").AutoFit
    
    dataRowStart = 4
    dataRowEnd = 15
    For i = dataRowStart To dataRowEnd
    
        If Cells(i, 3) > 0 Then
            'Color the cell green
            Cells(i, 3).Interior.Color = vbGreen
        ElseIf Cells(i, 3) < 0 Then
            'Color the cell red
            Cells(i, 3).Interior.Color = vbRed

        Else
            'Clear the cell color
            Cells(i, 3).Interior.Color = xlNone

        End If
        
    Next i
    
End Sub
